-- Mode 7 shader.
-- Shows a texture in a perspective view.
-- Inspired from https://www.shadertoy.com/view/ltsGWn

videomode {
    name = "mode_7",
    default_window_scale = 2,

    vertex_source = [[

    #version 120

    void main() {

//      gl_Position = gl_ModelViewProjectionMatrix * gl_Vertex;
      gl_Position = gl_ModelViewMatrix * gl_Vertex;
      gl_TexCoord[0] = gl_MultiTexCoord0;
    }
]],

    fragment_source = [[

    #version 120

    #define TEXEL(x,y) texture2D(x,y)

    uniform sampler2D solarus_sampler;
    uniform int solarus_display_time;

    vec2 resolution = 2 * vec2(320.0, 240.0);
//  vec2 resolution = vec2(1.0, 1.0);

    vec4 mainImage(vec2 fragCoord) {

      vec2 q = fragCoord / resolution;
      vec2 uv = q - vec2(0.5);

      // Create a 3D point
      float h = 0.25;
  //    float h = 0.5;
      vec3 p = vec3(uv.x, uv.y - h - 1.0, uv.y - h);

      // Projecting back to 2D space
      vec2 uvm7 = p.xy / p.z;

      // Texture scaling if you need
  //    float scale = 0.4;
      float scale = 0.4;
      uvm7 *= scale;

      // Rotations if needed
      float a = (solarus_display_time / 1000.0) * 0.5;
//      float a = 0.0;
      mat2 rotation = mat2(cos(a), - sin(a), sin(a), cos(a));
      uvm7 *= rotation;

      // Repeat
      uvm7 = fract(uvm7);

      // Read background texture
      vec3 col = TEXEL(solarus_sampler, uvm7).xyz;

      // Darkness based on the horizon
      col *= abs(uv.y - h - 0.35);

      // Output the color
      return vec4(col, 1.0);
  }

    void main() {
      gl_FragColor = mainImage(gl_FragCoord.xy);
//      gl_FragColor = mainImage(gl_TexCoord[0].xy);
    }
    ]]
}
