-- This is a scale2x glsl shader implementation from the bsnes project.
-- https://gitorious.org/bsnes/xml-shaders

videomode {
	-- Name of the video mode associated to the shader.
	name = "hw_scale2x",

	-- Default scale of the window compared to the quest_size.
	default_window_scale = 2,

	-- Source of the vertex shader.
	vertex_source = [[
    #version 120
    uniform vec2 solarus_io_size;
    	void main() {
      vec4 offsetx;
      vec4 offsety;

      gl_Position = gl_ModelViewProjectionMatrix * gl_Vertex;

      offsetx.x = 1.0 / solarus_io_size.x;
      offsetx.y = 0.0;
      offsetx.w = 0.0;
      	offsetx.z = 0.0;
      	offsety.y = 1.0 / solarus_io_size.y;
      	offsety.x = 0.0;
      	offsety.w = 0.0;
      	offsety.z = 0.0;

      gl_TexCoord[0] = gl_MultiTexCoord0;         //center
      gl_TexCoord[1] = gl_TexCoord[0] - offsetx;  //left
      gl_TexCoord[2] = gl_TexCoord[0] + offsetx;  //right
      gl_TexCoord[3] = gl_TexCoord[0] - offsety;  //top
      gl_TexCoord[4] = gl_TexCoord[0] + offsety;  //bottom
    }
	]],
	-- Source of the fragment shader.
	fragment_source = [[
    #version 120

    uniform sampler2D solarus_sampler;
    uniform vec2 solarus_io_size;

    void main() {
      vec4 colD, colF, colB, colH, col, tmp;
      vec2 sel;

      col  = texture2D(solarus_sampler, gl_TexCoord[0].xy);  //central (can be E0-E3)
      colD = texture2D(solarus_sampler, gl_TexCoord[1].xy);  //D (left)
      colF = texture2D(solarus_sampler, gl_TexCoord[2].xy);  //F (right)
      colB = texture2D(solarus_sampler, gl_TexCoord[3].xy);  //B (top)
      colH = texture2D(solarus_sampler, gl_TexCoord[4].xy);  //H (bottom)

      sel = fract(gl_TexCoord[0].xy * solarus_io_size.xy);       //where are we (E0-E3)?
                                                                 //E0 is default
      if(sel.y >= 0.5) { tmp = colB; colB = colH; colH = tmp; }  //E1 (or E3): swap B and H
      if(sel.x >= 0.5) { tmp = colF; colF = colD; colD = tmp; }  //E2 (or E3): swap D and F

      if(colB == colD && colB != colF && colD != colH) {  //do the Scale2x rule
        col = colD;
      }

      gl_FragColor = col;
    }
  ]]
}
