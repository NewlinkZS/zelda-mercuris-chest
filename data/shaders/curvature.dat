-- This is a curvature glsl shader implementation from the bsnes project.
-- https://gitorious.org/bsnes/xml-shaders

videomode {
  -- Name of the video mode associated to the shader.
  name = "curvature",

  -- Default scale of the window compared to the quest_size.
  default_window_scale = 2,

  vertex_source = [[
      #define ZOOM_SCALE 1.235

      void main()
      {
          gl_Position = gl_ModelViewProjectionMatrix * gl_Vertex * vec4(ZOOM_SCALE,ZOOM_SCALE,1.0,1.0);
          gl_TexCoord[0] = gl_MultiTexCoord0;
      }
  ]],

  fragment_source = [[
    uniform sampler2D solarus_sampler;
    uniform vec2 solarus_input_size;
    vec2 solarus_texture_size = solarus_input_size;

    // Tweak this parameter for more / less distortion
    #define distortion 1.2

    vec2 radialDistortion(vec2 coord) {
      coord *= solarus_texture_size / solarus_input_size;
      vec2 cc = coord - vec2(0.5);
      float dist = dot(cc, cc) * distortion;
      return (coord + cc * (1.0 + dist) * dist) * solarus_input_size / solarus_texture_size;
    }

    float corner(vec2 coord)
    {
        // TODO optimize
        if(coord.x < 0.0 || coord.y < 0.0 || coord.x > 1.0 || coord.y > 1.0)
            return 0.0;
        return 1.0;
    }

    void main(void) {
      vec2 xy = radialDistortion(gl_TexCoord[0].xy);
      vec4 sample = texture2D(solarus_sampler, xy);
      sample *= vec4(vec3(corner(xy)), 1.0);
      gl_FragColor = sample;
    }
  ]]
}
